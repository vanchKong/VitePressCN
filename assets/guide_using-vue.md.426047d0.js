import{_ as o,o as a,c as l,b as s,F as i,g as D,d as e,e as y,n as F,a as n,r as d,t as C}from"./app.2817651e.js";const u={};function h(p,t){return a(),l("span",null,"⚡")}const A=o(u,[["render",h]]),g="_example_t4bci_2",m={example:g},_={props:["slot-key"],components:{ComponentInHeader:A},mounted(){document.querySelector(`.${this.$style.example}`).textContent="这由内联脚本呈现并由内联 CSS 设置样式"}},I=JSON.parse('{"title":"在 Markdown 中使用 Vue","description":"","frontmatter":{},"headers":[{"level":2,"title":"模板化","slug":"模板化","link":"#模板化","children":[{"level":3,"title":"插值","slug":"插值","link":"#插值","children":[]},{"level":3,"title":"指令","slug":"指令","link":"#指令","children":[]},{"level":3,"title":"访问站点和页面数据","slug":"访问站点和页面数据","link":"#访问站点和页面数据","children":[]}]},{"level":2,"title":"忽略","slug":"忽略","link":"#忽略","children":[]},{"level":2,"title":"使用组件","slug":"使用组件","link":"#使用组件","children":[{"level":3,"title":"在 Markdown 中导入组件","slug":"在-markdown-中导入组件","link":"#在-markdown-中导入组件","children":[]},{"level":3,"title":"在 theme 中注册全局组件","slug":"在-theme-中注册全局组件","link":"#在-theme-中注册全局组件","children":[]},{"level":3,"title":"在标题中使用组件","slug":"在标题中使用组件","link":"#在标题中使用组件","children":[]}]},{"level":2,"title":"使用 CSS 预处理器","slug":"使用-css-预处理器","link":"#使用-css-预处理器","children":[]},{"level":2,"title":"脚本和样式提升","slug":"脚本和样式提升","link":"#脚本和样式提升","children":[]},{"level":2,"title":"内置组件","slug":"内置组件","link":"#内置组件","children":[]},{"level":2,"title":"浏览器 API 访问限制","slug":"浏览器-api-访问限制","link":"#浏览器-api-访问限制","children":[]}],"relativePath":"guide/using-vue.md","lastUpdated":1673034995000}'),v=n(`<h1 id="在-markdown-中使用-vue" tabindex="-1">在 Markdown 中使用 Vue <a class="header-anchor" href="#在-markdown-中使用-vue" aria-hidden="true">#</a></h1><p>在 VitePress 中，每个 markdown 文件都被编译成 HTML，然后作为 Vue 单文件组件处理。这意味着你可以在 markdown 中使用任何 Vue 功能，包括动态模板、使用 Vue 组件或通过添加 <code>&lt;script&gt;</code> 标签使用任意页面内 Vue 组件逻辑。</p><p>同样重要的是 <code>VitePress</code> 利用 <code>Vue 3</code> 的编译器来自动检测和优化 markdown 的纯静态部分。静态内容被优化为单个占位节点，并排除页面中的 JavaScript 负载。在客户端 hydration 期间也会跳过它们。简而言之，你只需为页面上的动态部分付出性能。</p><h2 id="模板化" tabindex="-1">模板化 <a class="header-anchor" href="#模板化" aria-hidden="true">#</a></h2><h3 id="插值" tabindex="-1">插值 <a class="header-anchor" href="#插值" aria-hidden="true">#</a></h3><p>每个 Markdown 文件首先被编译成 HTML，然后作为 Vue 组件传递给 Vite 进程。这意味着你可以在文本中使用 Vue-style 的插值：</p><p><strong>输入</strong></p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">{{ 1 + 1 }}</span></span>
<span class="line"></span></code></pre></div><p><strong>输出</strong></p><div class="language-text"><pre><code>2</code></pre></div><h3 id="指令" tabindex="-1">指令 <a class="header-anchor" href="#指令" aria-hidden="true">#</a></h3><p>指令同样能够运行：</p><p><strong>输入</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">i in 3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ i }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>输出</strong></p>`,15),f={class:"language-text"},k=n(`<h3 id="访问站点和页面数据" tabindex="-1">访问站点和页面数据 <a class="header-anchor" href="#访问站点和页面数据" aria-hidden="true">#</a></h3><p>你可以在 <code>&lt;script&gt;</code> 块中使用 <a href="./api#usedata"><code>useData</code> helper</a> 将数据暴露到页面。</p><p><strong>输入</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vitepress</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> page </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useData</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">pre</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ page }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">pre</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>输出</strong></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/using-vue.html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Using Vue in Markdown</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">frontmatter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="忽略" tabindex="-1">忽略 <a class="header-anchor" href="#忽略" aria-hidden="true">#</a></h2><p>默认情况下，插值代码块 会自动用 <code>v-pre</code> 包装，除非你设置了一些带有 <code>-vue</code> 后缀的语言，比如 <code>js-vue</code>（在这种情况下你可以在 <code>插值表达式</code> 内使用 Vue 风格的插值）。要在内联代码片段或纯文本中显示原始插值表达式或特定于 Vue 的语法，你需要使用 v-pre 自定义容器包装一个段落：</p><p><strong>Input</strong></p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">::: v-pre</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">{{ 这将按原样显示 }}</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">:::</span></span>
<span class="line"></span></code></pre></div><p><strong>Output</strong></p><div><p><code>{{ 这将按原样显示 }}</code></p></div><h2 id="使用组件" tabindex="-1">使用组件 <a class="header-anchor" href="#使用组件" aria-hidden="true">#</a></h2><p>当你需要更大的灵活性时，VitePress 允许你使用自己的 Vue 组件扩展你 coding 的工具箱。</p><h3 id="在-markdown-中导入组件" tabindex="-1">在 Markdown 中导入组件 <a class="header-anchor" href="#在-markdown-中导入组件" aria-hidden="true">#</a></h3><p>如果你的组件将只在少数几个地方使用，那么推荐的使用方式是在使用它的文件中导入组件。</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;script setup&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">import CustomComponent from &#39;../components/CustomComponent.vue&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/script&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">Docs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">This is a .md using a custom component</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">&lt;CustomComponent /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">## </span><span style="color:#FFCB6B;">More docs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"></span></code></pre></div><h3 id="在-theme-中注册全局组件" tabindex="-1">在 theme 中注册全局组件 <a class="header-anchor" href="#在-theme-中注册全局组件" aria-hidden="true">#</a></h3><p>如果组件将在文档的多个页面中使用，则可以在theme中全局注册它们（或作为一部分扩展 VitePress 默认的 theme）。查看<a href="./theme-introduction">主题指南</a>了解更多信息。</p><p>在 <code>.vitepress/theme/index.js</code> 中，<code>enhanceApp</code> 函数接收 Vue <code>app</code> 实例，因此你可以像在常规 Vue 应用程序中一样<a href="https://vuejs.org/guide/components/registration.html" target="_blank" rel="noreferrer">注册组件</a>。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> DefaultTheme </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vitepress/theme</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">DefaultTheme</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">enhanceApp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">DefaultTheme</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enhanceApp</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">component</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VueClickAwayExample</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VueClickAwayExample</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>然后在你的 markdown 文件中，可以使用组件</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">Vue Click Away</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">&lt;VueClickAwayExample /&gt;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">重要</p><p>确保自定义组件的名称包含连字符或采用 帕斯卡 命名规则。否则，它将被视为内联元素并包裹在 <code>&lt;p&gt;</code> 标签内，这将导致 hydration 不匹配，因为 <code>&lt;p&gt;</code> 不允许将块元素放置在其中。</p></div>`,24),b={id:"在标题中使用组件",tabindex:"-1"},V=s("a",{class:"header-anchor",href:"#在标题中使用组件","aria-hidden":"true"},"#",-1),x=n(`<p>你可以在标题中使用 Vue 组件，但请注意以下语法之间的区别：</p><table><thead><tr><th>Markdown</th><th>输出的 HTML</th><th>解析出的标题</th></tr></thead><tbody><tr><td><pre><code> # text &lt;Tag/&gt; </code></pre></td><td><code>&lt;h1&gt;text &lt;Tag/&gt;&lt;/h1&gt;</code></td><td><code>text</code></td></tr><tr><td><pre><code> # text \`&lt;Tag/&gt;\` </code></pre></td><td><code>&lt;h1&gt;text &lt;code&gt;&amp;lt;Tag/&amp;gt;&lt;/code&gt;&lt;/h1&gt;</code></td><td><code>text &lt;Tag/&gt;</code></td></tr></tbody></table><p>被 <code>&lt;code&gt;</code> 包裹的 HTML 将按原样显示；只有未包装的 HTML 才会被 Vue 解析。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>输出的 HTML 由 <a href="https://github.com/markdown-it/markdown-it" target="_blank" rel="noreferrer">markdown-it</a> 完成，而解析后的标题由 VitePress 处理（并用于侧边栏和文档标题）。</p></div><h2 id="使用-css-预处理器" tabindex="-1">使用 CSS 预处理器 <a class="header-anchor" href="#使用-css-预处理器" aria-hidden="true">#</a></h2><p>VitePress <a href="https://vitejs.dev/guide/features.html#css-pre-processors" target="_blank" rel="noreferrer">内置支持</a> CSS 预处理器：<code>.scss</code>、<code>.sass</code>、<code>.less</code>、<code>.styl</code> 和 <code>.stylus</code> 文件。无需为它们安装 Vite 专用插件，但必须安装相应的预处理器本身：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"># .scss and .sass</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install -D sass</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># .less</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install -D less</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># .styl and .stylus</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install -D stylus</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>然后你可以在 Markdown 和主题组件中使用以下内容：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sass</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">.title</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;font-style:italic;">px</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="脚本和样式提升" tabindex="-1">脚本和样式提升 <a class="header-anchor" href="#脚本和样式提升" aria-hidden="true">#</a></h2><p>有时你可能需要仅对当前页面应用一些 JavaScript 或 CSS。在这些情况下，你可以直接在 Markdown 文件中编写根级 <code>&lt;script&gt;</code>块 或 <code>&lt;style&gt;</code> 块。这些将从编译的 HTML 中提取出来，并用作生成的 Vue 单文件组件的 <code>&lt;script&gt;</code> 和 <code>&lt;style&gt;</code> 块：</p>`,11),T=n(`<h2 id="内置组件" tabindex="-1">内置组件 <a class="header-anchor" href="#内置组件" aria-hidden="true">#</a></h2><p>VitePress 提供了内置的 Vue 组件，比如 <code>ClientOnly</code>，查看<a href="./api">全局组件指南</a>了解更多信息。</p><p><strong>另见：</strong></p><ul><li><a href="#%E5%9C%A8%E6%A0%87%E9%A2%98%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%BB%84%E4%BB%B6">在标题中使用组件</a></li></ul><h2 id="浏览器-api-访问限制" tabindex="-1">浏览器 API 访问限制 <a class="header-anchor" href="#浏览器-api-访问限制" aria-hidden="true">#</a></h2><p>由于 VitePress 应用程序在生成静态构建时是在 Node.js 中服务器渲染的，因此任何 Vue 使用都必须符合<a href="https://vuejs.org/guide/scaling-up/ssr.html" target="_blank" rel="noreferrer">常规代码要求</a>。简而言之，确保仅在 <code>beforeMount</code> 或 <code>mounted</code> 挂钩中访问浏览器/ DOM APIs。</p><p>如果你正在使用或演示对 SSR 不友好的组件（例如，包含自定义指令），你可以将它们包装在内置的 <code>&lt;ClientOnly&gt;</code> 组件中：</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;ClientOnly&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;NonSSRFriendlyComponent /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/ClientOnly&gt;</span></span>
<span class="line"></span></code></pre></div><p>请注意，这不会修复<strong>在导入时</strong>访问浏览器 API 的组件或库的限制。要使用在导入时需要浏览器环境的代码，你需要在适当的生命周期挂钩中动态导入它们：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mounted</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./lib-that-access-window-on-import</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">module</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// use code</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>如果你的模块 <code>export default</code> 一个 Vue 组件，你可以动态注册它：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dynamicComponent</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">:is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dynamicComponent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      dynamicComponent</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mounted</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./lib-that-access-window-on-import</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">module</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">dynamicComponent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">module.</span><span style="color:#A6ACCD;">default</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>另见：</strong></p><ul><li><a href="https://vuejs.org/guide/essentials/component-basics.html#dynamic-components" target="_blank" rel="noreferrer">Vue.js &gt; Dynamic Components</a></li></ul>`,14);function E(p,t,w,M,P,B){const c=d("ComponentInHeader");return a(),l("div",null,[v,s("div",f,[s("pre",null,[s("code",null,[(a(),l(i,null,D(3,r=>s("span",null,C(r)+" ",1)),64))])])]),k,s("h3",b,[e("在标题中使用组件 "),y(c),e(),V]),x,s("p",{class:F(["demo",p.$style.example])},null,2),T])}const S={$style:m},j=o(_,[["render",E],["__cssModules",S]]);export{I as __pageData,j as default};

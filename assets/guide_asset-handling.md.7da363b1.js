import{_ as s,o as a,c as e,a as n}from"./app.1aac04b3.js";const y=JSON.parse('{"title":"静态资源处理","description":"","frontmatter":{},"headers":[{"level":2,"title":"公共文件","slug":"public-files","link":"#public-files","children":[]},{"level":2,"title":"Base URL","slug":"base-url","link":"#base-url","children":[]}],"relativePath":"guide/asset-handling.md","lastUpdated":1673082999000}'),l={name:"guide/asset-handling.md"},p=n(`<h1 id="asset-handling" tabindex="-1">静态资源处理 <a class="header-anchor" href="#asset-handling" aria-hidden="true">#</a></h1><p>所有 Markdown 文件都编译成 Vue 组件并由 <a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">Vite</a> 处理。你可以<strong>而且应该</strong>使用相对 URL 引用静态资源：</p><div class="language-md line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">An image</span><span style="color:#89DDFF;">](</span><span style="color:#A6ACCD;text-decoration:underline;">./image.png</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>你可以使用绝对公共路径（基于项目根目录）或相对路径（基于你的文件系统）在 markdown 文件中引用静态资源、 theme 中的 <code>*.vue</code> 组件、样式和纯 <code>.css</code> 文件。这类似于你使用 <code>vue-cli</code> 或 webpack 的 <code>file-loader</code>。 常见的图像、媒体和字体文件会被自动检测并作为静态资源包含在内。 所有引用的静态资源，包括那些使用绝对路径的静态资源，都将被复制到生产构建中具有hash文件名的 dist 文件夹。不会复制从未引用的静态资源。与 <code>vue-cli</code> 类似，小于 4kb 的图像资源将被 base64 inlined。 所有静态路径引用，包括绝对路径，都应基于你的工作目录结构。</p><h2 id="public-files" tabindex="-1">公共文件 <a class="header-anchor" href="#public-files" aria-hidden="true">#</a></h2><p>有时你可能需要提供未在任何 Markdown 或 theme 组件中直接引用的静态资源（例如，网站图标和 PWA 图标）。项目根目录下的<code>public</code>目录（<code>docs</code> 文件夹，如果你正在运行 <code>vitepress build docs</code>）可以用作escape hatch来提供静态资源，这些静态资源要么在源代码中从未被引用（例如 <code>robots.txt</code>），要么必须保持完全相同文件名(未被 hashing)。</p><p>放在 <code>public</code> 中的静态资源将按原样复制到 <code>dist</code> 目录的根目录中。</p><p>请注意，你应该使用根绝对路径引用放置在 <code>public</code> 中的文件 - 例如，<code>public/icon.png</code> 应该始终在源代码中引用为 <code>/icon.png</code>。</p><p>有一个例外：如果你有一个 <code>public</code> 目录中的 HTML 页面并从主站点链接到它，默认情况下路由器将产生 404。为了解决这个问题，VitePress 提供了一个 <code>pathname://</code> 协议，它允许你链接到同一域中的另一个页面，就好像链接是外部链接一样。对比这两个链接：</p><ul><li><a href="/VitePressCN/pure.html">/pure.html</a></li><li><a href="/VitePressCN/pure.html" target="_blank" rel="noreferrer">pathname:///VitePressCN/pure.html</a></li></ul><h2 id="base-url" tabindex="-1">Base URL <a class="header-anchor" href="#base-url" aria-hidden="true">#</a></h2><p>如果你的站点部署到非根 URL，则需要在 <code>.vitepress/config.js</code> 中设置 <code>base</code> 选项。例如，如果你计划将你的站点部署到 <code>https://foo.github.io/bar/</code>，则 <code>base</code> 应设置为 <code>&#39;/bar/&#39;</code>（它应始终以斜杠开头和结尾）。</p><p>针对不同的 <code>base</code> 配置值,你的所有静态资源路径都会自动调整。例如，如果你在 markdown 中对 <code>public</code> 下的静态资源进行绝对引用：</p><div class="language-md line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">An image</span><span style="color:#89DDFF;">](</span><span style="color:#A6ACCD;text-decoration:underline;">/image-inside-public.png</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在这种情况下，更改基本配置值时<strong>无需</strong>更新它。</p><p>但是，如果你正在编写动态链接到静态资源的 theme 组件，例如其 <code>src</code> 基于 theme 配置值的图像：</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">theme</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">logoPath</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在这种情况下，建议使用 VitePress 提供的 <a href="./api#withbase">withBase helper</a> 包装路径：</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">withBase</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vitepress</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> theme </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useData</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">withBase(theme.logoPath)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,19),o=[p];function t(c,r,i,d,D,u){return a(),e("div",null,o)}const h=s(l,[["render",t]]);export{y as __pageData,h as default};
